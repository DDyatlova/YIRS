# -*- coding: cp1251 -*-

#модуль для контроля летательного аппарата
#нужно реализовать функционал, который выполняет следующие действия:
#посылает управляющий сигнал на полётный контроллер с нужнымы параметрами
#проверяет успешность отправки (если есть такая возможность)

#НТЕРФЕЙС: 
#на вход получает углы на которые надо отклонить квадрокоптер
#на выходе - успеность заверщения, например в таком виде:
#0 - успешная отправка сигнала и его приём
#1 - отправка прошла, но устройство не отвечает
#2 - отправка не успешна, устройство не отвечает
#3 - оотправка неуспешна, устройство не отвечает
# ЭТО ПРОСТО ПРИМЕР

# НО 0 (ноль) - всегда должен сигнализировать об успешности завершения -
#работа прошла успешно, ошибок не возникло

#при работе используется модуль dronekit
#он основан на функционале модуля mavlink, но предоставляет более удобный
#интерфейс для работы с устройствами. Для получения информации с полётного
#контроллера в данный момент используется объект класса, возвращаемый dronekit.connect(),
#управление в теории должно производиться также через него.
#в качестве примера ПОЛУЧЕНИЯ данных с устройства и инициализации работы с ним
#будет приложен файл get_telem_param.py

#ВАЖНО: КОД ДОЛЖЕН БЫТЬ ПРОКОММЕНТИРОВАН

#ПРИМЕР

#функция для отправки сигнала на полётный контроллер
#первый параметр - устройство, на которое отправляется сигнал,
#второй параметр - заданные значения, которые необходимо отправить на устройство
def send_signal ( vehicle, param = [0, 0, 0, 0.60] ):
    #<отправка сигнала>

    #<проверка успешности отпрвки сигнала>

    #возврат успености отправки асигнала, 0 - успешно, любое другое значение - есть проблемы
    #return <state>

if __name__ == "__main__":
    #блок для тестирования модуля отдельно от других модулей
    
